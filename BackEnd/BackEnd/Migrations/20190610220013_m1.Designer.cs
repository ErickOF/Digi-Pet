// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.Models;

namespace WebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190610220013_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Canton")
                        .IsRequired();

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Email");

                    b.Property<string>("Email2");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mobile");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Province")
                        .IsRequired();

                    b.Property<string>("Role")
                        .IsRequired();

                    b.Property<string>("Token");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApi.Model.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("PetOwnerId");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Size");

                    b.HasKey("Id");

                    b.HasIndex("PetOwnerId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("WebApi.Model.Petowner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Petowner");
                });

            modelBuilder.Entity("WebApi.Model.ReportWalk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<int>("Stars");

                    b.Property<int>("WalkId");

                    b.HasKey("Id");

                    b.HasIndex("WalkId");

                    b.ToTable("ReportWalk");
                });

            modelBuilder.Entity("WebApi.Model.Walk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("PetId");

                    b.Property<int>("WalkerId");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("WalkerId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("WebApi.Model.Walker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("DoesOtherProvinces");

                    b.Property<string[]>("OtherProvinces");

                    b.Property<string>("University")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.Property<int?>("UserId1");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Walker");
                });

            modelBuilder.Entity("WebApi.Model.Pet", b =>
                {
                    b.HasOne("WebApi.Model.Petowner", "Petowner")
                        .WithMany("Pets")
                        .HasForeignKey("PetOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.Model.Petowner", b =>
                {
                    b.HasOne("WebApi.Entities.User", "User")
                        .WithMany("Petowners")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.Model.ReportWalk", b =>
                {
                    b.HasOne("WebApi.Model.Walk", "Walk")
                        .WithMany("ReportWalks")
                        .HasForeignKey("WalkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.Model.Walk", b =>
                {
                    b.HasOne("WebApi.Model.Pet", "Pet")
                        .WithMany("Walks")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApi.Model.Walker", "Walker")
                        .WithMany("Walks")
                        .HasForeignKey("WalkerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.Model.Walker", b =>
                {
                    b.HasOne("WebApi.Entities.User", "User")
                        .WithMany("Walkers")
                        .HasForeignKey("UserId1");
                });
#pragma warning restore 612, 618
        }
    }
}
